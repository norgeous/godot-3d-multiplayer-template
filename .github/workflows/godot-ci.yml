name: "godot-ci export"
on: push

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: godot-3d-multiplayer-template
  PROJECT_PATH: .

jobs:
  godot-build:
    name: Godot Build and Release
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Linux Dedicated Server Build
        run: |
          mkdir -v -p build/linux-server
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux-ds" "$EXPORT_DIR/linux-server/$EXPORT_NAME-dedicated-server.x86_64"
      - name: Calculate semver version
        id: calculate-version
        uses: bitshifted/git-auto-semver@v1
        with:
          main_branch: ${{ github.ref_name }}
          create_tag: false
          # tag_prefix: 'tags'
      - name: Use version
        run: |
          echo "Calculated version: ${{ steps.calculate-version.outputs.version-string }}"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "build/windows/*,build/linux/*,build/linux-server/*"
          # draft: true
          prerelease: ${{ github.ref_name != 'main'}}
          tag: "v${{ steps.calculate-version.outputs.version-string }}-${{ github.ref_name }}"
          body: ${{ github.sha }}
          # generateReleaseNotes: true
          # bodyFile: "body.md"
